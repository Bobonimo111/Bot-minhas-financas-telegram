name: Send to production server

on:
  push:
    # Mude 'main' para a branch que voc√™ quer que acione o deploy (ex: 'production')
    branches:
      - deploy
      
jobs:
  deploy:
    # Garante que o deploy s√≥ rode ap√≥s um merge na branch especificada.
    # Se voc√™ quer rodar em qualquer push, remova esta linha.
    # type: merged_pull_request 

    runs-on: ubuntu-latest

    steps:
    - name: üì¶ Checkout do C√≥digo
      uses: actions/checkout@v4

    # --- Configura√ß√£o SSH e Chave Privada ---
    - name: üîë Configurar Chave SSH Privada
      # Usaremos uma Action popular para facilitar a configura√ß√£o do SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: ‚öôÔ∏è Adicionar Host do Servidor aos Known Hosts
      run: |
        ssh-keyscan ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

    # --- Execu√ß√£o do Deploy e Scripts Remotos ---
    - name: üöÄ Executar Deploy e Script de P√≥s-Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        # Port 22 √© o padr√£o, mude se o seu for diferente
        port: 22 
        script: |
          # Navegue at√© o diret√≥rio de deploy
          cd ${{ secrets.DEPLOY_TARGET }}
          echo ${{secrets.DEPLOY_TARGET}}

          # Comando de Deploy: Puxe a √∫ltima vers√£o do seu reposit√≥rio
          # Se o seu repo for privado, a chave SSH configurada acima (Deploy Key)
          # deve estar adicionada ao seu repo GitHub OU voc√™ deve usar HTTPS com um PAT.
          # Neste exemplo, estamos assumindo que voc√™ est√° apenas rodando comandos.
          # Para um deploy b√°sico, o git pull √© o mais comum:

          if [ ! -d ".git" ]; then
            echo "Reposit√≥rio n√£o clonado. Clonando..."
            git clone --branch deploy https://github.com/Bobonimo111/Bot-minhas-financas-telegram.git 
          fi

          # 1. Busca todas as refer√™ncias remotas
          git fetch origin
          
          # 2. Faz o checkout da branch desejada (garante que estamos nela)
          git checkout deploy
          
          # 3. Puxa as √∫ltimas altera√ß√µes da branch remota
          git pull origin deploy
           
          # Ativa o ambiente virtual
          source venv/bin/activate
          
          # 4. Instale/Atualize as depend√™ncias Python
          echo "Instalando depend√™ncias via pip..."
          # O -r requirements.txt √© o padr√£o para projetos Python
          pip install -r requirements.txt
          
          # 5. Execute comandos de P√≥s-Deploy (ex: migra√ß√£o de banco de dados)
          # echo "Executando migra√ß√µes de banco de dados (se for Django/Flask/etc)..."
          # Exemplo para Django:
          # python manage.py migrate --noinput
          
          # 6. Reinicie o Servi√ßo da Aplica√ß√£o (Gunicorn/uWSGI + Nginx/Apache)
          echo "Reiniciando o servi√ßo da aplica√ß√£o..."
          # Se voc√™ usa Gunicorn ou uWSGI gerenciado pelo systemd/Supervisor:
          # √â o m√©todo mais seguro e comum.
          sudo systemctl restart telegram-bot.service
          
          # 7. Desative o ambiente virtual
          deactivate
          
          echo "Deploy Python conclu√≠do com sucesso!"
